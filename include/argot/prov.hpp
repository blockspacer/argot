/*==============================================================================
  Copyright (c) 2019 Matt Calabrese

  Distributed under the Boost Software License, Version 1.0. (See accompanying
  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/

/******************************************************************************/
/******** THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY BY HAND. ********/
/******************************************************************************/

#ifndef ARGOT_PROV_HPP_
#define ARGOT_PROV_HPP_

//[description"
/*`
This header includes all of the facilities of the `prov` directory.
*/
//]

//[docs
//]

#include <argot/prov/abort.hpp>
#include <argot/prov/access_tuple.hpp>
#include <argot/prov/access_union.hpp>
#include <argot/prov/access_variant.hpp>
#include <argot/prov/alternative_of.hpp>
#include <argot/prov/alternative_of_by_value.hpp>
#include <argot/prov/as.hpp>
#include <argot/prov/assert_.hpp>
#include <argot/prov/bind_call.hpp>
#include <argot/prov/bind_transform.hpp>
#include <argot/prov/bool_.hpp>
#include <argot/prov/boost_assert.hpp>
#include <argot/prov/conditional.hpp>
#include <argot/prov/default_to_reference_to.hpp>
#include <argot/prov/default_to_value_of.hpp>
#include <argot/prov/drop.hpp>
#include <argot/prov/drop_while.hpp>
#include <argot/prov/eat.hpp>
#include <argot/prov/element_or.hpp>
#include <argot/prov/element_or_nothing.hpp>
#include <argot/prov/element_or_provision.hpp>
#include <argot/prov/exit.hpp>
#include <argot/prov/expand.hpp>
#include <argot/prov/for_.hpp>
#include <argot/prov/group.hpp>
#include <argot/prov/index_of.hpp>
#include <argot/prov/integer_sequence.hpp>
#include <argot/prov/lift_call.hpp>
#include <argot/prov/lift_transform.hpp>
#include <argot/prov/nothing.hpp>
#include <argot/prov/provider_reference.hpp>
#include <argot/prov/quick_exit.hpp>
#include <argot/prov/reference_to.hpp>
#include <argot/prov/rethrow.hpp>
#include <argot/prov/run.hpp>
#include <argot/prov/squash.hpp>
#include <argot/prov/switch_.hpp>
#include <argot/prov/terminate.hpp>
#include <argot/prov/throw_.hpp>
#include <argot/prov/tuple_index.hpp>
#include <argot/prov/tuple_indices.hpp>
#include <argot/prov/union_index.hpp>
#include <argot/prov/union_indices.hpp>
#include <argot/prov/unpack.hpp>
#include <argot/prov/unpack_by_value.hpp>
#include <argot/prov/unpack_integer_sequence.hpp>
#include <argot/prov/unreachable.hpp>
#include <argot/prov/value_in_range.hpp>
#include <argot/prov/value_in_set.hpp>
#include <argot/prov/value_of.hpp>
#include <argot/prov/variant_index.hpp>
#include <argot/prov/variant_indices.hpp>

#endif  // ARGOT_PROV_HPP_
