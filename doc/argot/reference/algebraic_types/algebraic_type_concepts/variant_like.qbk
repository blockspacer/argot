[/==============================================================================
    Copyright (C) 2016 Matt Calabrese

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================/]

[section VariantLike]

[heading Description]

A =VariantLike= is a UnionLikeQ that knows which /alternative/ is currently
active.

[heading Requirements]

In order to model the =VariantLike= concept, the `concept_map_` `template` must
be specialized for the type and define the following nested names with the
specified semantics:

[heading Traits]

TODO(mattcalabrese) Describe the traits

[heading Modeled by]

* `std::variant< `[~H, T...]` >`
* `boost::variant< `[~H, T...]` >`

[heading Refinement of]

* UnionLikeQ

[heading Related References]

[endsect]
