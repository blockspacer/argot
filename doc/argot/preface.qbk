[/==============================================================================
    Copyright (C) 2016, 2017, 2018 Matt Calabrese

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================/]

[h1 Preface]

[:["The limits of my language mean the limits of my world.]]
[:[*['-- Ludwig Wittgenstein]]]

[h2 Description]

This library introduces a set of algorithms named call that operate on a
standard =invocable object= followed by any number of ArgumentProviders, each of
which acts as a description of a portion of an argument list that is to be
substituted in-place when the =callable object= is invoked. Each generated
argument list portion may be any number of arguments with any combination of
types. The precise argument list and its values may depend on runtime data. Due
to the generality of the substitution mechanism, the facility allows
ArgumentProviders such as ones that can unpack tuples at arbitrary positions in
a larger argument list, as well as ArgumentProvidersQ that can forward along the
active alternative of a variant. In addition to these familiar operations,
further ArgumentProvidersQ are presented that do not directly correspond to
existing boost library or standard library facilities.

[/
[$../test.svg [width 100%]]

[import ../example/preface_example.cpp]

[preface_example]
]